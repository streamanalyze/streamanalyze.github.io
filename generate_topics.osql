load_model("mqtt-tutorial");
load_model("pi0");
load_model("streamer_tutorial");
load_model("statistical_analysis_guide");
load_model("getting-started");

create function my_get_summary_md(Charstring prefix, Charstring file, Charstring pattern, Vector ignore, Number indent) -> Charstring
  as select content
       from Record r, Charstring content 
      where r in case when prefix = '' then get_summaries()                                 
                      when like(prefix, '*topics/')  or like(prefix, '*topic/') then [get_summary('Topics',streamof(['||TOPICS||']))]
                      when like(prefix, '*modelmd/') then [{'title': 'Guides', 'folder': 1, 'children': vectorof(select rec from Record rec where rec in get_model_listings(pattern) and notany(rec["title"] in ignore)) }]
                      else  get_summaries() end
        and content = get_summary_md0(r,indent);
set :model_summary = my_get_summary_md("modelmd/","summary.md","*getting-started*",[],0) + 
"\n- [More guides](/docs/md/modelmd/README)\n" + 
my_get_summary_md("modelmd/","summary.md","*",["Getting started"],2);


write_file(get_summary_md("","summary.md"), "docs/summary.md");
write_file(get_summary_md("","summary.md"), "docs/md/summary.md");
write_file(get_summary_md("topics/","summary.md"), "docs/md/topics/summary.md");
write_file(get_summary_md("topics/","summary.md"), "docs/topic/summary.md");
write_file(:model_summary, "docs/md/modelmd/summary.md");
write_file(:model_summary, "docs/usermd/summary.md");
write_file(:model_summary, "docs/systemmd/summary.md");
create_folder("docs/topic");

select write_file(content,"docs/topic/"+file)
  from Charstring file, Charstring content, Topic topic
 where file = replace(name(topic),[" "],["_"])+".md"
   and content = get_topic_content(name(topic));




quit;